##  This function returns the best hospital in the state/commonwealth for one of
##  three outcomes: heart attack, heart failure, or pneumonia.  The
##  state/commonwealth must be one of the states found in the State column of
##  the data file.


best <- function(state, outcome)
{

##  Test to see if the outcome entered is valid

    if(is.na(match(outcome, c("heart attack", "heart failure", "pneumonia"))))
    {
        stop("invalid outcome")
    }


##  Load the file into a data frame.

    outcome_df <- read.csv("outcome-of-care-measures.csv")


##  Test to see if the state/commonwealth is valid

    if(is.na(match(state, outcome_df$State)))
    {
        stop("invalid state")
    }


##  Get a vector of boolean values showing if the data row is in the
##  state/commonwealth.

    is_state <- outcome_df$State == state


##  Extract the hospital names in the state/commonwealth from the data frame.

    names <- as.character(outcome_df$Hospital.Name[is_state])


##  Extract the outcome values in the state/commonwealth from the data frame.

    if(outcome == "heart attack")
    {
        data <- outcome_df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
    }
    else if(outcome == "heart failure")
    {
        data <- outcome_df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
    }
    else if(outcome == "pneumonia")
    {
        data <- outcome_df$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
    }


##  Convert the data vector to numeric values while keeping only values
##  in the state/commonwealth.

    data <- suppressWarnings(as.numeric(as.character(data[is_state])))


##  Get the names of the hospitals with the best (lowest) results

    names <- names[which(data == min(data, na.rm = TRUE))]


##  Return the hospital name that is first in alphabetical order.

    names[which(names == min(names))]

}
